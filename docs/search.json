[{"path":"https://github.com/imohamme/NASAaccess/articles/About.html","id":"video-abstract","dir":"Articles","previous_headings":"","what":"Video Abstract","title":"Introduction","text":"Video abstract “Technical note: NASAaccess – tool access, reformatting, visualization remotely sensed earth observation climate data”.","code":""},{"path":"https://github.com/imohamme/NASAaccess/articles/About.html","id":"index","dir":"Articles","previous_headings":"","what":"Index","title":"Introduction","text":"GPM GLDAS CMIP5 Climate CMIP6 Climate","code":""},{"path":"https://github.com/imohamme/NASAaccess/articles/About.html","id":"built-with","dir":"Articles","previous_headings":"","what":"Built with","title":"Introduction","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: aarch64-apple-darwin20 #> Running under: macOS 15.1 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: Asia/Dubai #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.37     desc_1.4.3        R6_2.5.1          fastmap_1.2.0     #>  [5] xfun_0.49         cachem_1.1.0      knitr_1.48        htmltools_0.5.8.1 #>  [9] rmarkdown_2.28    lifecycle_1.0.4   cli_3.6.3         sass_0.4.9        #> [13] pkgdown_2.1.1     textshaping_0.4.0 jquerylib_0.1.4   systemfonts_1.1.0 #> [17] compiler_4.4.1    rstudioapi_0.17.1 tools_4.4.1       ragg_1.3.3        #> [21] bslib_0.8.0       evaluate_1.0.1    yaml_2.3.10       jsonlite_1.8.9    #> [25] rlang_1.1.4       fs_1.6.5          htmlwidgets_1.6.4"},{"path":"https://github.com/imohamme/NASAaccess/articles/About.html","id":"reference","dir":"Articles","previous_headings":"","what":"Reference","title":"Introduction","text":"Mohammed, .N., Bustamante, E.G.R., Bolten, J.D., Nelson, E.J., 2023. Technical note: NASAaccess – tool access, reformatting, visualization remotely sensed earth observation climate data. Hydrol. Earth Syst. Sci. 27, 3621-3642, https://doi.org/10.5194/hess-27-3621-2023","code":""},{"path":"https://github.com/imohamme/NASAaccess/articles/GLDAS.html","id":"basic-use","dir":"Articles","previous_headings":"","what":"Basic use","title":"Getting started with GLDAS data","text":"Let’s use example watersheds introduced GPMswat GPMpolyCentroid. Please visit NASAaccess GPM functions information. Let’s examine air temperature station file GLDASwat generated ascii table available grid located within study watershed. GLDASwat also generated air temperature stations file input shown GLDASwat.table (table columns: ID, File NAME, LAT, LONG, ELEVATION) selected grids fall within specified watershed. GLDAS dataset used GLDAS Noah Land Surface Model L4 3 hourly 0.25 x 0.25 degree V2.1. Now, let’s see location GLDASwat generated grid points  note GLDASwat given us GLDAS data grids fall within boundaries White Oak Bayou study watershed. time series air temperature data stored data tables (.e., 2 tables) can viewed also. looking air temperature reformatted data first grid point listed air temperature station file time series air temperature data written format gives daily maximum minimum air temperature degrees ‘C’. Now, let’s examine GPMpolyCentroid. Using watershed example: Now let’s examine GLDASpolyCentroid generated outputs  note GLDASpolyCentroid given us GLDAS data grid fall within specified watershed assigns pseudo air temperature gauge located centroid watershed weighted-average daily maximum minimum air temperature data.","code":"#Reading input data  dem_path <- system.file(\"extdata\",                         \"DEM_TX.tif\",                         package = \"NASAaccess\")  shape_path <- system.file(\"extdata\",                           \"basin.shp\",                            package = \"NASAaccess\")  library(NASAaccess)  GLDASwat(Dir = \"./GLDASwat/\",                   watershed = shape_path,                   DEM = dem_path,                   start = \"2020-08-1\",                   end = \"2020-08-3\") GLDASwat.tempMaster <- system.file('extdata/GLDASwat',                                          'temp_Master.txt',                                           package = 'NASAaccess')  GLDASwat.table<-read.csv(GLDASwat.tempMaster)  head(GLDASwat.table) #>       ID       NAME      LAT      LONG ELEVATION #> 1 345937 temp345937 29.85021 -95.80842  46.64194 #> 2 345938 temp345938 29.85021 -95.55859  30.55108  dim(GLDASwat.table) #> [1] 2 5 library(ggplot2) library(tidyterra) #>  #> Attaching package: 'tidyterra' #> The following object is masked from 'package:stats': #>  #>     filter ggplot(shape) +       geom_spatvector(color='red',fill=NA) +      geom_point(data=GLDASwat.table,aes(x=LONG,y=LAT)) GLDASwat.point.data <- system.file('extdata/GLDASwat',                               'temp345937.txt',                                package = 'NASAaccess') #Reading data records read.csv(GLDASwat.point.data) #>                  X20200801 #> 32.1672399902343  23.28843 #> 33.0642431640625  22.76880 #> 33.7442358398437  22.91977 GLDASpolyCentroid(Dir = \"./GLDASpolyCentroid/\",                   watershed = shape_path,                   DEM = dem_path,                   start = \"2018-08-1\",                   end = \"2018-08-3\") library(ggplot2) library(tidyterra) GLDASpolyCentroid.tempMaster <- system.file('extdata/GLDASpolyCentroid',                               'temp_Master.txt',                                  package = 'NASAaccess')  GLDASpolyCentroid.table<-read.csv(GLDASpolyCentroid.tempMaster)  #plot ggplot(shape) +       geom_spatvector(color='red',fill=NA) +      geom_point(data=GLDASpolyCentroid.table,              aes(x=LONG,y=LAT)) +   coord_sf(xlim=c(-96,-95.2),ylim=c(29.7,30))"},{"path":"https://github.com/imohamme/NASAaccess/articles/GLDAS.html","id":"built-with","dir":"Articles","previous_headings":"","what":"Built with","title":"Getting started with GLDAS data","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: aarch64-apple-darwin20 #> Running under: macOS 15.1 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: Asia/Dubai #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] tidyterra_0.6.1 ggplot2_3.5.1   terra_1.7-78    #>  #> loaded via a namespace (and not attached): #>  [1] sass_0.4.9         utf8_1.2.4         generics_0.1.3     tidyr_1.3.1        #>  [5] class_7.3-22       KernSmooth_2.23-24 digest_0.6.37      magrittr_2.0.3     #>  [9] evaluate_1.0.1     grid_4.4.1         fastmap_1.2.0      jsonlite_1.8.9     #> [13] e1071_1.7-16       DBI_1.2.3          purrr_1.0.2        fansi_1.0.6        #> [17] scales_1.3.0       codetools_0.2-20   textshaping_0.4.0  jquerylib_0.1.4    #> [21] cli_3.6.3          rlang_1.1.4        units_0.8-5        munsell_0.5.1      #> [25] withr_3.0.2        cachem_1.1.0       yaml_2.3.10        tools_4.4.1        #> [29] dplyr_1.1.4        colorspace_2.1-1   vctrs_0.6.5        R6_2.5.1           #> [33] proxy_0.4-27       lifecycle_1.0.4    classInt_0.4-10    fs_1.6.5           #> [37] htmlwidgets_1.6.4  ragg_1.3.3         pkgconfig_2.0.3    desc_1.4.3         #> [41] pkgdown_2.1.1      pillar_1.9.0       bslib_0.8.0        gtable_0.3.6       #> [45] glue_1.8.0         Rcpp_1.0.13        sf_1.0-18          systemfonts_1.1.0  #> [49] highr_0.11         xfun_0.49          tibble_3.2.1       tidyselect_1.2.1   #> [53] rstudioapi_0.17.1  knitr_1.48         farver_2.1.2       htmltools_0.5.8.1  #> [57] rmarkdown_2.28     compiler_4.4.1"},{"path":"https://github.com/imohamme/NASAaccess/articles/GPM.html","id":"basic-use","dir":"Articles","previous_headings":"","what":"Basic use","title":"Getting started with GPM data","text":"Let’s look example watershed want examine near Houston, TX: geographic layout White Oak Bayou watershed example used demonstration depicted . Whiteoak Bayou tributary Buffalo Bayou River (Harris County, Texas). order use NASAaccess also need digital elevation model (DEM) raster layer. Let’s see White Oak Bayou watershed DEM closer look study watershed example.  Now, let’s examine GPMswat: Examining rainfall station file generated GPMswat GPMswat generated ascii table available grid located within study watershed. 11 grids within study watershed means 11 tables generated. GPMswat also generated rainfall stations file input shown GPMswat.table (table columns: ID, File NAME, LAT, LONG, ELEVATION) selected grids fall within specified watershed. Now, let’s see location generated grid points:  note GPMswat given us GPM data grids fall within boundaries White Oak Bayou study watershed. time series rainfall data stored data tables (.e., 11 tables) can viewed also. looking reformatted data first grid point listed rainfall station file generated GPMswat. GPMswat generated ready format ascii tables can ingested easily Soil Water Assessment Tool SWAT model hydrological model choice. Now, let’s examine GPMpolyCentroid. Examining rainfall station file generated GPMpolyCentroid  note GPMpolyCentroid given us GPM data grid falls within specified watershed assigns pseudo rainfall gauge located centroid watershed weighted-average daily rainfall data. Let’s examine precipitation data just obtained GPMpolyCentroid White Oak Bayou study watershed.  time series plot gives rainfall amounts (mm) centroid White Oak Bayou watershed 2019-August-01 2019-August-03. Last least, let’s examine near real time precipitation data obtained GPM_NRT White Oak Bayou study watershed. Remember minimum latency GPM_NRT one day. can experiment function yesterday data, nice! Let’s see one point data record. See data starts July 1, 2022 ends July 3rd, 2022.","code":"library(leaflet) library(ggplot2) library(terra) #> terra 1.7.78 #Reading input data dem_path <- system.file(\"extdata\",                          \"DEM_TX.tif\",                          package = \"NASAaccess\")  shape_path <- system.file(\"extdata\",                            \"basin.shp\",                            package = \"NASAaccess\")   dem <- terra::rast(dem_path)    shape <- terra::vect(shape_path)       #plot the watershed data myMap <- leaflet() %>%                  addTiles() %>%                  fitBounds(-96, 29.7, -95.2, 30) %>%                  addPolygons(lng=terra::crds(shape)[,1],                            lat=terra::crds(shape)[,2])  myMap # create a plot of our DEM raster along with watershed (i.e., elevation in meters)  plot(dem,main=\"White Oak Bayou Watershed with Digital Elevation Model (DEM)\")  plot(shape , add = TRUE) library(NASAaccess)  GPMswat(Dir = \"./GPMswat/\",                   watershed = shape_path,                   DEM = dem_path,                   start = \"2020-08-1\",                   end = \"2020-08-3\") GPMswat.precipitationMaster <- system.file('extdata/GPMswat',                                          'precipitationMaster.txt',                                           package = 'NASAaccess')  # reading GPMswat header file GPMswat.table<-read.csv(GPMswat.precipitationMaster)  head(GPMswat.table) #>        ID                 NAME      LAT      LONG ELEVATION #> 1 2160842 precipitation2160842 29.93337 -95.82337  50.16166 #> 2 2160843 precipitation2160843 29.93337 -95.72340  46.68206 #> 3 2160844 precipitation2160844 29.93337 -95.62343  39.72196 #> 4 2160845 precipitation2160845 29.93337 -95.52346  35.58193 #> 5 2164442 precipitation2164442 29.83343 -95.82337  48.02116 #> 6 2164443 precipitation2164443 29.83343 -95.72340  40.47534  dim(GPMswat.table) #> [1] 11  5 library(ggplot2) library(tidyterra) #>  #> Attaching package: 'tidyterra' #> The following object is masked from 'package:stats': #>  #>     filter  ggplot(shape) +        geom_spatvector(color='red',fill=NA) +       geom_point(data=GPMswat.table,              aes(x=LONG,                  y=LAT,                  fill=ELEVATION),               shape=21,               size = 4) +      scale_fill_gradientn(colours = terrain.colors(7)) GPMswat.point.data <- system.file('extdata/GPMswat',                               'precipitation2160842.txt',                                package = 'NASAaccess')  # reading data records read.csv(GPMswat.point.data) #>     X20200801 #> 1 32.22795868 #> 2  1.80884695 #> 3  0.07029478 GPMpolyCentroid(Dir = \"./GPMpolyCentroid/\",                   watershed = shape_path,                   DEM = dem_path,                   start = \"2019-08-1\",                   end = \"2019-08-3\") library(ggplot2) library(tidyterra)   GPMpolyCentroid.precipitationMaster <- system.file('extdata/GPMpolyCentroid',                                                     'precipitationMaster.txt',                                                      package = 'NASAaccess')  GPMpolyCentroid.precipitation.table <- read.csv(GPMpolyCentroid.precipitationMaster)  # plotting  ggplot(shape) +           geom_spatvector(color='red',fill=NA) +          geom_point(data=GPMpolyCentroid.precipitation.table,              aes(x=LONG,y=LAT)) GPMpolyCentroid.precipitation.record <- system.file('extdata/GPMpolyCentroid',                                                     'precipitation1.txt',                                                      package = 'NASAaccess')  GPMpolyCentroid.precipitation.data <- read.csv(GPMpolyCentroid.precipitation.record)  # since data started on 2019-08-01  days <- seq.Date(from = as.Date('2019-08-01'),                   length.out = dim(GPMpolyCentroid.precipitation.data)[1],                  by = 'day')  # plotting the precipitation time series  plot(days, GPMpolyCentroid.precipitation.data [,1],                                      pch = 19, ylab= '(mm)',                                      xlab = '',                                      type = 'b',      main=\"White Oak Bayou Watershed precipitation (GPM)\") GPM_NRT(Dir = \"./GPMswat/\",                   watershed = shape_path,                   DEM = dem_path,                   start = \"2022-07-1\",                   end = \"2022-07-3\") GPM_NRT.point.data <- system.file('extdata/GPM_NRT',                               'precipitation2160845.txt',                                package = 'NASAaccess')  #Reading data records read.csv(GPM_NRT.point.data) #>   X20220701 #> 1  2.507078 #> 2  1.148573 #> 3  0.000000"},{"path":"https://github.com/imohamme/NASAaccess/articles/GPM.html","id":"built-with","dir":"Articles","previous_headings":"","what":"Built with","title":"Getting started with GPM data","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: aarch64-apple-darwin20 #> Running under: macOS 15.1 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: Asia/Dubai #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] tidyterra_0.6.1 terra_1.7-78    ggplot2_3.5.1   leaflet_2.2.2   #>  #> loaded via a namespace (and not attached): #>  [1] sass_0.4.9         utf8_1.2.4         generics_0.1.3     tidyr_1.3.1        #>  [5] class_7.3-22       KernSmooth_2.23-24 digest_0.6.37      magrittr_2.0.3     #>  [9] evaluate_1.0.1     grid_4.4.1         fastmap_1.2.0      jsonlite_1.8.9     #> [13] e1071_1.7-16       DBI_1.2.3          purrr_1.0.2        fansi_1.0.6        #> [17] crosstalk_1.2.1    scales_1.3.0       codetools_0.2-20   textshaping_0.4.0  #> [21] jquerylib_0.1.4    cli_3.6.3          rlang_1.1.4        units_0.8-5        #> [25] munsell_0.5.1      withr_3.0.2        cachem_1.1.0       yaml_2.3.10        #> [29] tools_4.4.1        dplyr_1.1.4        colorspace_2.1-1   vctrs_0.6.5        #> [33] R6_2.5.1           proxy_0.4-27       classInt_0.4-10    lifecycle_1.0.4    #> [37] fs_1.6.5           htmlwidgets_1.6.4  ragg_1.3.3         pkgconfig_2.0.3    #> [41] desc_1.4.3         pkgdown_2.1.1      pillar_1.9.0       bslib_0.8.0        #> [45] gtable_0.3.6       glue_1.8.0         Rcpp_1.0.13        sf_1.0-18          #> [49] systemfonts_1.1.0  xfun_0.49          tibble_3.2.1       tidyselect_1.2.1   #> [53] highr_0.11         rstudioapi_0.17.1  knitr_1.48         farver_2.1.2       #> [57] htmltools_0.5.8.1  labeling_0.4.3     rmarkdown_2.28     compiler_4.4.1"},{"path":"https://github.com/imohamme/NASAaccess/articles/NEXGDDP-CMIP6.html","id":"basic-use","dir":"Articles","previous_headings":"","what":"Basic use","title":"Getting started with NEXGDDP-CMIP6 data","text":"Let’s use example watersheds introduced GPMswat GPMpolyCentroid. Please visit NASAaccess GPM functions information. Let’s examine air temperature station file","code":"#Reading input data  dem_path <- system.file(\"extdata\",                         \"DEM_TX.tif\",                         package = \"NASAaccess\")  shape_path <- system.file(\"extdata\",                           \"basin.shp\",                            package = \"NASAaccess\")  #CMIP6  example for air temperature  library(NASAaccess)  NEX_GDDP_CMIP6(                Dir = \"./NEX_GDDP_CMIP6/\",                 watershed = shape_path,                DEM = dem_path,                  start = \"2060-12-1\",                 end = \"2060-12-3\",                model = 'ACCESS-CM2',                 type = 'tas',                 slice = 'ssp245') NEX_GDDP_CMIP6.temperature.Master <- system.file('extdata/NEX_GDDP_CMIP6',                                          'tasGrid_Master.txt',                                           package = 'NASAaccess')  NEX_GDDP_CMIP6.table<-read.csv(NEX_GDDP_CMIP6.temperature.Master)  head(NEX_GDDP_CMIP6.table) #>        ID              NAME      LAT      LONG ELEVATION #> 1 2160842 tasclimate2160842 29.93337 -95.82337  50.20436 #> 2 2160843 tasclimate2160843 29.93337 -95.72340  46.65100 #> 3 2160844 tasclimate2160844 29.93337 -95.62343  39.71060 #> 4 2160845 tasclimate2160845 29.93337 -95.52346  35.15914 #> 5 2164442 tasclimate2164442 29.83343 -95.82337  47.60787 #> 6 2164443 tasclimate2164443 29.83343 -95.72340  40.46636  dim(NEX_GDDP_CMIP6.table) #> [1] 11  5"},{"path":"https://github.com/imohamme/NASAaccess/articles/NEXGDDP-CMIP6.html","id":"built-with","dir":"Articles","previous_headings":"","what":"Built with","title":"Getting started with NEXGDDP-CMIP6 data","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: aarch64-apple-darwin20 #> Running under: macOS 15.1 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: Asia/Dubai #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.37     desc_1.4.3        R6_2.5.1          fastmap_1.2.0     #>  [5] xfun_0.49         cachem_1.1.0      knitr_1.48        htmltools_0.5.8.1 #>  [9] rmarkdown_2.28    lifecycle_1.0.4   cli_3.6.3         sass_0.4.9        #> [13] pkgdown_2.1.1     textshaping_0.4.0 jquerylib_0.1.4   systemfonts_1.1.0 #> [17] compiler_4.4.1    rstudioapi_0.17.1 tools_4.4.1       ragg_1.3.3        #> [21] bslib_0.8.0       evaluate_1.0.1    yaml_2.3.10       jsonlite_1.8.9    #> [25] rlang_1.1.4       fs_1.6.5          htmlwidgets_1.6.4"},{"path":[]},{"path":"https://github.com/imohamme/NASAaccess/articles/NEXGDDP.html","id":"basic-use","dir":"Articles","previous_headings":"","what":"Basic use","title":"Getting started with NEXGDDP-CMIP5 data","text":"Let’s use example watersheds introduced GPMswat GPMpolyCentroid. Please visit NASAaccess GPM functions information. Let’s examine precipitation station file processed precipitation data Institut Pierre Simon Laplace Model CM5A-MR Representative Concentration Pathways (RCP85) example watershed December 2060 (1st 3rd). Changing type parameter NEX_GDDP_CMIP5 function pr tas gives us minimum maximum air temperatures.","code":"#Reading input data dem_path <- system.file(\"extdata\",                         \"DEM_TX.tif\",                           package = \"NASAaccess\")  shape_path <- system.file(\"extdata\",                            \"basin.shp\",                             package = \"NASAaccess\")   library(NASAaccess)  NEX_GDDP_CMIP5(Dir = \"./NEX_GDDP_CMIP5/\",                watershed = shape_path,               DEM = dem_path,                start = \"2060-12-1\",                end = \"2060-12-3\",               model = 'IPSL-CM5A-MR',                type = 'pr',                slice = 'rcp85') NEX_GDDP.precipitationMaster <- system.file('extdata/NEX_GDDP_CMIP5',                                          'prGrid_Master.txt',                                           package = 'NASAaccess')  NEX_GDDP_CMIP5.table<-read.csv(NEX_GDDP.precipitationMaster)  head(NEX_GDDP_CMIP5.table) #>        ID             NAME      LAT      LONG ELEVATION #> 1 2160842 prclimate2160842 29.93337 -95.82337  50.16166 #> 2 2160843 prclimate2160843 29.93337 -95.72340  46.68206 #> 3 2160844 prclimate2160844 29.93337 -95.62343  39.72196 #> 4 2160845 prclimate2160845 29.93337 -95.52346  35.58193 #> 5 2164442 prclimate2164442 29.83343 -95.82337  48.02116 #> 6 2164443 prclimate2164443 29.83343 -95.72340  40.47534  dim(NEX_GDDP_CMIP5.table) #> [1] 11  5"},{"path":"https://github.com/imohamme/NASAaccess/articles/NEXGDDP.html","id":"built-with","dir":"Articles","previous_headings":"","what":"Built with","title":"Getting started with NEXGDDP-CMIP5 data","text":"","code":"sessionInfo() #> R version 4.4.1 (2024-06-14) #> Platform: aarch64-apple-darwin20 #> Running under: macOS 15.1 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib  #> LAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0 #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> time zone: Asia/Dubai #> tzcode source: internal #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> loaded via a namespace (and not attached): #>  [1] digest_0.6.37     desc_1.4.3        R6_2.5.1          fastmap_1.2.0     #>  [5] xfun_0.49         cachem_1.1.0      knitr_1.48        htmltools_0.5.8.1 #>  [9] rmarkdown_2.28    lifecycle_1.0.4   cli_3.6.3         sass_0.4.9        #> [13] pkgdown_2.1.1     textshaping_0.4.0 jquerylib_0.1.4   systemfonts_1.1.0 #> [17] compiler_4.4.1    rstudioapi_0.17.1 tools_4.4.1       ragg_1.3.3        #> [21] bslib_0.8.0       evaluate_1.0.1    yaml_2.3.10       jsonlite_1.8.9    #> [25] rlang_1.1.4       fs_1.6.5          htmlwidgets_1.6.4"},{"path":[]},{"path":"https://github.com/imohamme/NASAaccess/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ibrahim Mohammed. Author, maintainer.","code":""},{"path":"https://github.com/imohamme/NASAaccess/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Mohammed (2024). NASAaccess: Downloading Reformatting Tool NASA Earth Observation Data Products. R package version 4.1.0, https://github.com/imohamme/NASAaccess.","code":"@Manual{,   title = {{NASAaccess}: Downloading and Reformatting Tool for NASA Earth Observation Data Products},   author = {Ibrahim Mohammed},   year = {2024},   institution = {Khalifa University, Civil and Environmental Engineering},   address = {P. O. Box 127788, Abu Dhabi, UAE},   note = {R package version 4.1.0},   url = {https://github.com/imohamme/NASAaccess}, }"},{"path":"https://github.com/imohamme/NASAaccess/index.html","id":"nasaaccess","dir":"","previous_headings":"","what":"Downloading and Reformatting Tool for NASA Earth Observation Data Products","title":"Downloading and Reformatting Tool for NASA Earth Observation Data Products","text":"Ibrahim N. Mohammed","code":""},{"path":"https://github.com/imohamme/NASAaccess/index.html","id":"what-is-nasaaccess","dir":"","previous_headings":"","what":"What is NASAaccess?","title":"Downloading and Reformatting Tool for NASA Earth Observation Data Products","text":"NASAaccess software application form R package, conda package, Tethys web application. NASAaccess software can generate gridded ascii tables climate CMIP5, CMIP6, earth observation remote sensing data (GPM, TRMM, GLDAS) needed drive various hydrological models (e.g., SWAT, VIC, RHESSys, …etc.). NASAaccess Tethys web-based application can used accessing, reformatting, visualizing climate earth observation remote sensing gridded time series data well.","code":""},{"path":"https://github.com/imohamme/NASAaccess/index.html","id":"where-to-find-the-nasaaccess-software","dir":"","previous_headings":"","what":"Where to find the NASAaccess software?","title":"Downloading and Reformatting Tool for NASA Earth Observation Data Products","text":"R package can downloaded GitHub https://github.com/imohamme/NASAaccess. Conda package can installed directly Anaconda searching r-nasaaccess. Tethys web-based application can directly installed GitHub https://github.com/imohamme/tethys_nasaaccess.","code":""},{"path":"https://github.com/imohamme/NASAaccess/index.html","id":"how-nasaaccess-software-is-distributed","dir":"","previous_headings":"","what":"How NASAaccess software is distributed?","title":"Downloading and Reformatting Tool for NASA Earth Observation Data Products","text":"NASAaccess open-source software package NASA Open Source Agreement v1.3.","code":""},{"path":[]},{"path":"https://github.com/imohamme/NASAaccess/index.html","id":"r-library","dir":"","previous_headings":"What is needed to install the NASAaccess software on my local machine?","what":"R Library","title":"Downloading and Reformatting Tool for NASA Earth Observation Data Products","text":"local machine user installed following programs well setting user account. list gives summary needed done prior work NASAaccess software local machine: Installing R software Installing Rstudio software (OPTIONAL) NASAaccess R package needs user registration access Earthdata. Users set registration account(s) Earthdata login well well authorizing NASA GES DISC data access. Please refer https://disc.gsfc.nasa.gov/information/documents Data Access section details. curl software . Since Mac users curl part macOS build, Windows users make sure local machines build curl installed properly. Checking can run curl command prompt. Type curl --help see help pages curl program everything defined correctly. Within Rstudio R terminal run following commands install NASAaccess: library(devtools) install_github(\"imohamme/NASAaccess\", build_vignettes = TRUE) library(NASAaccess) Within Rstudio help tab user can verify package installed browse help pages various functions NASAaccess. GES DISC user registration access logging information processed masking (.e., displaying lieteral typed text input) platforms. Without providing GES DISC user registration access logging information, user receive ‘need provide Earthdata GES DISC login proceed…’ message.","code":""},{"path":"https://github.com/imohamme/NASAaccess/index.html","id":"conda-package","dir":"","previous_headings":"What is needed to install the NASAaccess software on my local machine?","what":"Conda Package","title":"Downloading and Reformatting Tool for NASA Earth Observation Data Products","text":"NASAaccess conda package needs user registration access Earthdata. Users set registration account(s) Earthdata login well well authorizing NASA GES DISC data access. Please refer https://disc.gsfc.nasa.gov/information/documents Data Access section details. Creating .netrc file user machine Home directory storing user NASA GES DISC logging information done automatically execute NASAaccess package commands. Accessing data NASA servers explained . GES DISC user registration access logging information processed masking terminal major OS. Without providing GES DISC user registration access logging information, user receive ‘need provide Earthdata GES DISC login proceed…’ message. install NASAaccess package conda environment run following:","code":"conda install -c conda-forge r-nasaaccess"},{"path":"https://github.com/imohamme/NASAaccess/index.html","id":"tethys-web-based-application","dir":"","previous_headings":"What is needed to install the NASAaccess software on my local machine?","what":"Tethys web-based Application","title":"Downloading and Reformatting Tool for NASA Earth Observation Data Products","text":"Full details installing web-based application NASAaccess single machines local servers can found readthedocs.","code":""},{"path":"https://github.com/imohamme/NASAaccess/index.html","id":"is-there-a-walk-through-examples-for-nasaaccess-software","dir":"","previous_headings":"","what":"Is there a walk through examples for NASAaccess software?","title":"Downloading and Reformatting Tool for NASA Earth Observation Data Products","text":"Software users encouraged visit (https://imohamme.github.io/NASAaccess/) learn NASAaccess functionality capabilities.","code":""},{"path":[]},{"path":"https://github.com/imohamme/NASAaccess/index.html","id":"r-package","dir":"","previous_headings":"How to cite NASAaccess Platform?","what":"R Package","title":"Downloading and Reformatting Tool for NASA Earth Observation Data Products","text":"","code":"citation(package = 'NASAaccess') #> To cite package 'NASAaccess' in publications use: #>  #>   Mohammed I (2024). _NASAaccess: Downloading and Reformatting Tool for #>   NASA Earth Observation Data Products_. R package version 4.1.0, #>   <https://github.com/imohamme/NASAaccess>. #>  #> A BibTeX entry for LaTeX users is #>  #>   @Manual{, #>     title = {{NASAaccess}: Downloading and Reformatting Tool for NASA Earth Observation Data Products}, #>     author = {Ibrahim Mohammed}, #>     year = {2024}, #>     institution = {Khalifa University, Civil and Environmental Engineering}, #>     address = {P. O. Box 127788, Abu Dhabi, UAE}, #>     note = {R package version 4.1.0}, #>     url = {https://github.com/imohamme/NASAaccess}, #>   }"},{"path":"https://github.com/imohamme/NASAaccess/index.html","id":"reference","dir":"","previous_headings":"How to cite NASAaccess Platform?","what":"Reference","title":"Downloading and Reformatting Tool for NASA Earth Observation Data Products","text":"Mohammed, .N., Bustamante, E.G.R., Bolten, J.D., Nelson, E.J., 2023. Technical note: NASAaccess – tool access, reformatting, visualization remotely sensed earth observation climate data. Hydrol. Earth Syst. Sci. 27, 3621-3642, https://doi.org/10.5194/hess-27-3621-2023","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASpolyCentroid.html","id":null,"dir":"Reference","previous_headings":"","what":"Air temperature data from NASA GLDAS on centroid — GLDASpolyCentroid","title":"Air temperature data from NASA GLDAS on centroid — GLDASpolyCentroid","text":"function downloads remote sensing data GLDAS NASA GSFC servers, extracts air temperature data grids falling within specified sub-basin(s) watershed shapefile, assigns pseudo air temperature gauge located centroid sub-basin(s) watershed weighted-average daily minimum maximum air temperature data.  function generates tables format SWAT rainfall-runoff hydrological model requires minimum maximum air temperatures data input. function also generates air temperature stations file input (file columns: ID, File NAME, LAT, LONG, ELEVATION) selected grids pseudo grids correspond centroids watershed sub-basins.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASpolyCentroid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Air temperature data from NASA GLDAS on centroid — GLDASpolyCentroid","text":"","code":"GLDASpolyCentroid(   Dir = \"./SWAT_INPUT/\",   watershed = \"LowerMekong.shp\",   DEM = \"LowerMekong_dem.tif\",   start = \"2015-12-1\",   end = \"2015-12-3\" )"},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASpolyCentroid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Air temperature data from NASA GLDAS on centroid — GLDASpolyCentroid","text":"Dir directory name store gridded air temperature air temperature stations files. watershed study watershed shapefile spatially describing polygon(s) geographic projection crs='+proj=longlat +datum=WGS84'. DEM study watershed digital elevation model raster geographic projection crs='+proj=longlat +datum=WGS84'. start Beginning date gridded air temperature data. end Ending date gridded air temperature data.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASpolyCentroid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Air temperature data from NASA GLDAS on centroid — GLDASpolyCentroid","text":"table includes points ID, Point file name, Lat, Long, Elevation information formatted read SWAT hydrological model, scalar maximum minimum air temperature gridded data values pseudo air temperature grid located centroid sub-basin within study watershed provided ascii format needed SWAT model hydrological model weather inputs. air temperature tables stored Dir.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASpolyCentroid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Air temperature data from NASA GLDAS on centroid — GLDASpolyCentroid","text":"user visit https://disc.gsfc.nasa.gov/information/documents Data Access document register Earth Observing System Data Information System (NASA Earthdata) authorize NASA GESDISC Data Access successfully work function. function accesses NASA Goddard Space Flight Center server address GLDAS remote sensing data products (https://hydro1.gesdisc.eosdis.nasa.gov/data/GLDAS/GLDAS_NOAH025_3H.2.1/).  function uses variable name ('Tair_f_inst') air temperature GLDAS data products. Units gridded air temperature data degrees 'K'. GLDASpolyCentroid function outputs gridded air temperature (maximum minimum) data degrees 'C'. goal Global Land Data Assimilation System GLDAS ingest satellite ground-based observational data products, using advanced land surface modeling data assimilation techniques, order generate optimal fields land surface states fluxes (Rodell et al., 2004). GLDAS data set used function GLDAS Noah Land Surface Model L4 3 hourly 0.25 x 0.25 degree V2.1. full suite GLDAS data sets available https://hydro1.gesdisc.eosdis.nasa.gov/dods/.  GLDASpolyCentroid finds minimum maximum air temperatures day grid within study watershed searching minima maxima three hours air temperature data values available day grid. GLDASpolyCentroid function relies \"curl\" tool transfer data NASA servers user machine, using HTTPS supported protocol.  \"curl\" command embedded function fetch GLDAS netcdf daily global files designed work seamlessly given appropriate logging information stored \".netrc\" file cookies file \".urs_cookies\" explained registering Earth Observing System Data Information System. imperative say user machine \"curl\" installed prerequisite run GLDASpolyCentroid. GLDAS V2.1 simulation started January 1, 2000 using conditions GLDAS V2.0 simulation. GLDAS V2.1 simulation forced National Oceanic Atmospheric Administration NOAA, Global Data Assimilation System GDAS atmospheric analysis fields (Derber et al., 1991), disaggregated Global Precipitation Climatology Project GPCP precipitation fields (Adler et al., 2003), Air Force Weather Agency's AGRicultural METeorological modeling system AGRMET radiation fields became available March 1, 2001 onward.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASpolyCentroid.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Air temperature data from NASA GLDAS on centroid — GLDASpolyCentroid","text":"start equal greater 2000-Jan-01.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASpolyCentroid.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Air temperature data from NASA GLDAS on centroid — GLDASpolyCentroid","text":"Adler, R. F., G. J. Huffman, . Chang, R. Ferraro, P.-P. Xie, J. Janowiak, B. Rudolf, U. Schneider, S. Curtis, D. Bolvin, . Gruber, J. Susskind, P. Arkin,  E. Nelkin (2003), Version-2 Global Precipitation Climatology Project (GPCP) Monthly Precipitation Analysis (1979–Present), J. Hydrometeorol., 4, 1147-1167, doi:10.1175/1525-7541(2003)004<1147:tvgpcp>2.0.co;2. Derber, J. C., D. F. Parrish, S. J. Lord (1991), New Global Operational Analysis System National Meteorological Center, Weather Forecast, 6, 538-547, doi:10.1175/1520-0434(1991)006<0538:tngoas>2.0.co;2. Rodell, M., P. R. Houser, U. Jambor, J. Gottschalck, K. Mitchell, C.-J. Meng, K. Arsenault, B. Cosgrove, J. Radakovich, M. Bosilovich, J. K. Entin*, J. P. Walker, D. Lohmann, D. Toll (2004), Global Land Data Assimilation System, B. . Meteorol. Soc., 85, 381-394, doi:10.1175/bams-85-3-381.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASpolyCentroid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Air temperature data from NASA GLDAS on centroid — GLDASpolyCentroid","text":"Ibrahim Mohammed, ibrahim.mohammed@ku.ac.ae","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASpolyCentroid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Air temperature data from NASA GLDAS on centroid — GLDASpolyCentroid","text":"","code":"#Lower Mekong basin example if (FALSE) GLDASpolyCentroid(Dir = \"./SWAT_INPUT/\", watershed = \"LowerMekong.shp\", DEM = \"LowerMekong_dem.tif\", start = \"2015-12-1\", end = \"2015-12-3\") # \\dontrun{}"},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASwat.html","id":null,"dir":"Reference","previous_headings":"","what":"SWAT air temperature data from NASA GLDAS — GLDASwat","title":"SWAT air temperature data from NASA GLDAS — GLDASwat","text":"function downloads remote sensing data GLDAS NASA GSFC servers, extracts air temperature data grids within specified watershed shapefile, generates tables format SWAT requires minimum maximum air temperature data input. function also generates air temperature stations file input (file columns: ID, File NAME, LAT, LONG, ELEVATION) selected grids fall within specified watershed.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASwat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SWAT air temperature data from NASA GLDAS — GLDASwat","text":"","code":"GLDASwat(   Dir = \"./SWAT_INPUT/\",   watershed = \"LowerMekong.shp\",   DEM = \"LowerMekong_dem.tif\",   start = \"2015-12-1\",   end = \"2015-12-3\" )"},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASwat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SWAT air temperature data from NASA GLDAS — GLDASwat","text":"Dir directory name store gridded air temperature air temperature stations files. watershed study watershed shapefile spatially describing polygon(s) geographic projection crs='+proj=longlat +datum=WGS84'. DEM study watershed digital elevation model raster geographic projection crs='+proj=longlat +datum=WGS84'. start Beginning date gridded air temperature data. end Ending date gridded air temperature data.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASwat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SWAT air temperature data from NASA GLDAS — GLDASwat","text":"table includes points ID, Point file name, Lat, Long, Elevation information formatted read SWAT, scalar maximum minimum air temperature gridded data values point within study watershed ascii format needed SWAT model weather inputs stored Dir.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASwat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SWAT air temperature data from NASA GLDAS — GLDASwat","text":"user visit https://disc.gsfc.nasa.gov/information/documents Data Access document register Earth Observing System Data Information System (NASA Earthdata) authorize NASA GESDISC Data Access successfully work function. function accesses NASA Goddard Space Flight Center server address GLDAS remote sensing data products (https://hydro1.gesdisc.eosdis.nasa.gov/data/GLDAS/GLDAS_NOAH025_3H.2.1/).  function uses variable name ('Tair_f_inst') air temperature GLDAS data products. Units gridded air temperature data degrees 'K'. GLDASwat function outputs gridded air temperature (maximum minimum) data degrees 'C'. goal Global Land Data Assimilation System GLDAS ingest satellite ground-based observational data products, using advanced land surface modeling data assimilation techniques, order generate optimal fields land surface states fluxes (Rodell et al., 2004). GLDAS dataset used function GLDAS Noah Land Surface Model L4 3 hourly 0.25 x 0.25 degree V2.1. full suite GLDAS datasets available https://hydro1.gesdisc.eosdis.nasa.gov/dods/.  GLDASwat finds minimum maximum air temperatures day grid within study watershed searching minima maxima three hours air temperature data values available day grid. GLDASwat function relies 'curl' tool transfer data NASA servers user machine, using HTTPS supported protocol.  'curl' command embedded function fetch GLDAS netcdf daily global files designed work seamlessly given appropriate logging information stored \".netrc\" file cookies file \".urs_cookies\" explained registering Earth Observing System Data Information System. imperative say user machine 'curl' installed prerequisite run GLDASwat. GLDAS V2.1 simulation started January 1, 2000 using conditions GLDAS V2.0 simulation. GLDAS V2.1 simulation forced National Oceanic Atmospheric Administration NOAA, Global Data Assimilation System GDAS atmospheric analysis fields (Derber et al., 1991), disaggregated Global Precipitation Climatology Project GPCP precipitation fields (Adler et al., 2003), Air Force Weather Agency’s AGRicultural METeorological modeling system AGRMET radiation fields became available March 1, 2001 onward.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASwat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"SWAT air temperature data from NASA GLDAS — GLDASwat","text":"start equal greater 2000-Jan-01.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASwat.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"SWAT air temperature data from NASA GLDAS — GLDASwat","text":"Adler, R. F., G. J. Huffman, . Chang, R. Ferraro, P.-P. Xie, J. Janowiak, B. Rudolf, U. Schneider, S. Curtis, D. Bolvin, . Gruber, J. Susskind, P. Arkin, E. Nelkin (2003), Version-2 Global Precipitation Climatology Project (GPCP) Monthly Precipitation Analysis (1979–Present), J. Hydrometeorol., 4, 1147-1167, doi:10.1175/1525-7541(2003)004<1147:tvgpcp>2.0.co;2. Derber, J. C., D. F. Parrish, S. J. Lord (1991), New Global Operational Analysis System National Meteorological Center, Weather Forecast, 6, 538-547, doi:10.1175/1520-0434(1991)006<0538:tngoas>2.0.co;2. Rodell, M., P. R. Houser, U. Jambor, J. Gottschalck, K. Mitchell, C.-J. Meng, K. Arsenault, B. Cosgrove, J. Radakovich, M. Bosilovich, J. K. Entin*, J. P. Walker, D. Lohmann, D. Toll (2004), Global Land Data Assimilation System, B. . Meteorol. Soc., 85, 381-394, doi:10.1175/bams-85-3-381.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASwat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SWAT air temperature data from NASA GLDAS — GLDASwat","text":"Ibrahim Mohammed, ibrahim.mohammed@ku.ac.ae","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GLDASwat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SWAT air temperature data from NASA GLDAS — GLDASwat","text":"","code":"#Lower Mekong basin example if (FALSE) GLDASwat(Dir = \"./SWAT_INPUT/\", watershed = \"LowerMekong.shp\", DEM = \"LowerMekong_dem.tif\", start = \"2015-12-1\", end = \"2015-12-3\") # \\dontrun{}"},{"path":"https://github.com/imohamme/NASAaccess/reference/GPM_NRT.html","id":null,"dir":"Reference","previous_headings":"","what":"NASA GPM Near Real Time rainfall data — GPM_NRT","title":"NASA GPM Near Real Time rainfall data — GPM_NRT","text":"function downloads rainfall remote sensing data IMERG NASA GSFC servers, extracts data grids within specified watershed shapefile, generates tables format hydrological model requires rainfall data input. function also generates rainfall stations file input (file columns: ID, File NAME, LAT, LONG, ELEVATION) selected grids fall within specified watershed. minimum latency function one day.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPM_NRT.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NASA GPM Near Real Time rainfall data — GPM_NRT","text":"","code":"GPM_NRT(   Dir = \"./INPUT/\",   watershed = \"LowerMekong.shp\",   DEM = \"LowerMekong_dem.tif\",   start = \"2022-6-1\",   end = \"2022-6-10\" )"},{"path":"https://github.com/imohamme/NASAaccess/reference/GPM_NRT.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NASA GPM Near Real Time rainfall data — GPM_NRT","text":"Dir directory name store gridded rainfall rain stations files. watershed study watershed shapefile spatially describing polygon(s) geographic projection crs='+proj=longlat +datum=WGS84'. DEM study watershed digital elevation model raster geographic projection crs='+proj=longlat +datum=WGS84'. start Beginning date gridded rainfall data. end Ending date gridded rainfall data.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPM_NRT.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NASA GPM Near Real Time rainfall data — GPM_NRT","text":"table includes points ID, Point file name, Lat, Long, Elevation information, scalar rainfall gridded data values point within study watershed ascii format needed hydrological model weather inputs stored Dir.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPM_NRT.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NASA GPM Near Real Time rainfall data — GPM_NRT","text":"user visit https://disc.gsfc.nasa.gov/information/documents Data Access document register Earth Observing System Data Information System (NASA Earthdata) authorize NASA GESDISC Data Access successfully work function. function accesses NASA Goddard Space Flight Center server address IMERG remote sensing data products (https://gpm1.gesdisc.eosdis.nasa.gov/data/GPM_L3/GPM_3IMERGDE.06/).  function uses variable name ('precipitationCal') rainfall IMERG data products. Units gridded rainfall data 'mm'. IMERG dataset GPM Level 3 IMERG *Early* Daily 0.1 x 0.1 deg (GPM_3IMERGDE) derived half-hourly GPM_3IMERGHHE. derived result represents final estimate daily accumulated precipitation. dataset produced NASA Goddard Earth Sciences (GES) Data Information Services Center (DISC) simply summing valid precipitation retrievals day GPM_3IMERGHHE giving result (mm) https://gpm.nasa.gov/data/directory. IMERG data products available 2000-June-1 present. function outputs table gridded data files match grid points resolution IMERG data products (.e., resolution 0.1 deg). GPM_NRT function relies 'curl' tool transfer data NASA servers user machine, using HTTPS supported protocol.  'curl' command embedded function fetch precipitation IMERG netcdf daily global files designed work seamlessly given appropriate logging information stored \".netrc\" file cookies file \".urs_cookies\" explained registering Earth Observing System Data Information System. imperative say user machine 'curl' installed prerequisite run GPM_NRT.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPM_NRT.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"NASA GPM Near Real Time rainfall data — GPM_NRT","text":"start equal greater 2000-Jun-01. end minimum latency 1 day.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPM_NRT.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"NASA GPM Near Real Time rainfall data — GPM_NRT","text":"Ibrahim Mohammed, ibrahim.mohammed@ku.ac.ae","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPM_NRT.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NASA GPM Near Real Time rainfall data — GPM_NRT","text":"","code":"#Lower Mekong basin example if (FALSE) GPM_NRT(Dir = \"./INPUT/\", watershed = \"LowerMekong.shp\", DEM = \"LowerMekong_dem.tif\", start = \"2022-6-1\", end = \"2022-6-10\") # \\dontrun{}"},{"path":"https://github.com/imohamme/NASAaccess/reference/GPMpolyCentroid.html","id":null,"dir":"Reference","previous_headings":"","what":"NASA GPM rainfall data on centroid — GPMpolyCentroid","title":"NASA GPM rainfall data on centroid — GPMpolyCentroid","text":"function downloads rainfall remote sensing data TRMM IMERG NASA GSFC servers, extracts data grids falling within specified sub-basin(s) watershed shapefile assigns pseudo rainfall gauge located centroid sub-basin(s) watershed weighted-average daily rainfall data.  function generates rainfall tables format SWAT rainfall-runoff hydrological model requires rainfall data input. function also generates rainfall stations file summary input (file columns: ID, File NAME, LAT, LONG, ELEVATION) pseudo grids correspond centroids watershed sub-basins.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPMpolyCentroid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NASA GPM rainfall data on centroid — GPMpolyCentroid","text":"","code":"GPMpolyCentroid(   Dir = \"./SWAT_INPUT/\",   watershed = \"LowerMekong.shp\",   DEM = \"LowerMekong_dem.tif\",   start = \"2015-12-1\",   end = \"2015-12-3\" )"},{"path":"https://github.com/imohamme/NASAaccess/reference/GPMpolyCentroid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NASA GPM rainfall data on centroid — GPMpolyCentroid","text":"Dir directory name store gridded rainfall rain stations files. watershed study watershed shapefile spatially describing polygon(s) geographic projection crs='+proj=longlat +datum=WGS84'. DEM study watershed digital elevation model raster geographic projection crs='+proj=longlat +datum=WGS84'. start Beginning date gridded rainfall data. end Ending date gridded rainfall data.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPMpolyCentroid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NASA GPM rainfall data on centroid — GPMpolyCentroid","text":"table includes Points ID, Point file name, Lat, Long, Elevation information formatted read SWAT hydrological model, scalar rainfall gridded data values pseudo rain grid located centroid sub-basin within study watershed provided ascii format needed SWAT model hydrological model weather inputs. rain tables stored Dir.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPMpolyCentroid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NASA GPM rainfall data on centroid — GPMpolyCentroid","text":"user visit https://disc.gsfc.nasa.gov/information/documents Data Access document register Earth Observing System Data Information System (NASA Earthdata) authorize NASA GESDISC Data Access successfully work function. function accesses NASA Goddard Space Flight Center server address IMERG remote sensing data products (https://gpm1.gesdisc.eosdis.nasa.gov/data/GPM_L3/GPM_3IMERGDF.07/), NASA Goddard Space Flight Center server address TRMM remote sensing data products (https://disc2.gesdisc.eosdis.nasa.gov/data/TRMM_RT/TRMM_3B42RT_Daily.7/).  function uses variable name ('precipitation') rainfall IMERG data products variable name ('precipitation') TRMM rainfall data products. Units gridded rainfall data 'mm'. IMERG dataset GPM Level 3 IMERG *Final* Daily 0.1 x 0.1 deg (GPM_3IMERGDF) derived half-hourly GPM_3IMERGHH. derived result represents final estimate daily accumulated precipitation. dataset produced NASA Goddard Earth Sciences (GES) Data Information Services Center (DISC) simply summing valid precipitation retrievals day GPM_3IMERGHH giving result (mm) https://gpm.nasa.gov/data/directory. TRMM dataset daily 0.25 x 0.25 deg accumulated precipitation product generated Near Real-Time 3-hourly TMPA (3B42RT). produced NASA GES DISC, value added product. Simple summation valid retrievals grid cell applied data day. result given (mm) https://gpm.nasa.gov/data/directory. Since IMERG data products available 2000-June-1 present, function uses TRMM data products time periods earlier 2000-June-1. Keep mind TRMM data products compatible IMERG data products available 2000-March-01. function outputs table gridded data files match grid points resolution IMERG data products (.e., resolution 0.1 deg). Since TRMM IMERG data products similar spatial resolution (.e., 0.25 0.1 deg respectively), function assigns nearest TRMM grid point missing IMERG data point approximate (.e. 2000-March-01 2014-March-11 time period). GPMpolyCentroid function relies 'curl' tool transfer data NASA servers user machine, using HTTPS supported protocol.  'curl' command embedded function fetch precipitation IMERG/TRMM netcdf daily global files designed work seamlessly given appropriate logging information stored \".netrc\" file cookies file \".urs_cookies\" explained registering Earth Observing System Data Information System. imperative say user machine 'curl' installed prerequisite run GPMpolyCentroid.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPMpolyCentroid.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"NASA GPM rainfall data on centroid — GPMpolyCentroid","text":"start equal greater 2000-Mar-01.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPMpolyCentroid.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"NASA GPM rainfall data on centroid — GPMpolyCentroid","text":"Ibrahim Mohammed, ibrahim.mohammed@ku.ac.ae","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPMpolyCentroid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NASA GPM rainfall data on centroid — GPMpolyCentroid","text":"","code":"#Lower Mekong basin example if (FALSE) GPMpolyCentroid(Dir = \"./SWAT_INPUT/\", watershed = \"LowerMekong.shp\", DEM = \"LowerMekong_dem.tif\", start = \"2015-12-1\", end = \"2015-12-3\") # \\dontrun{}"},{"path":"https://github.com/imohamme/NASAaccess/reference/GPMswat.html","id":null,"dir":"Reference","previous_headings":"","what":"SWAT rainfall data from NASA GPM — GPMswat","title":"SWAT rainfall data from NASA GPM — GPMswat","text":"function downloads rainfall remote sensing data TRMM IMERG NASA GSFC servers, extracts data grids within specified watershed shapefile, generates tables format SWAT requires rainfall data input. function also generates rainfall stations file input (file columns: ID, File NAME, LAT, LONG, ELEVATION) selected grids fall within specified watershed.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPMswat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SWAT rainfall data from NASA GPM — GPMswat","text":"","code":"GPMswat(   Dir = \"./SWAT_INPUT/\",   watershed = \"LowerMekong.shp\",   DEM = \"LowerMekong_dem.tif\",   start = \"2015-12-1\",   end = \"2015-12-3\" )"},{"path":"https://github.com/imohamme/NASAaccess/reference/GPMswat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SWAT rainfall data from NASA GPM — GPMswat","text":"Dir directory name store gridded rainfall rain stations files. watershed study watershed shapefile spatially describing polygon(s) geographic projection crs='+proj=longlat +datum=WGS84'. DEM study watershed digital elevation model raster geographic projection crs='+proj=longlat +datum=WGS84'. start Beginning date gridded rainfall data. end Ending date gridded rainfall data.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPMswat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SWAT rainfall data from NASA GPM — GPMswat","text":"table includes points ID, Point file name, Lat, Long, Elevation information formatted read SWAT, scalar rainfall gridded data values point within study watershed ascii format needed SWAT model weather inputs stored Dir.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPMswat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SWAT rainfall data from NASA GPM — GPMswat","text":"user visit https://disc.gsfc.nasa.gov/information/documents Data Access document register Earth Observing System Data Information System (NASA Earthdata) authorize NASA GESDISC Data Access successfully work function. function accesses NASA Goddard Space Flight Center server address IMERG remote sensing data products (https://gpm1.gesdisc.eosdis.nasa.gov/data/GPM_L3/GPM_3IMERGDF.07/), NASA Goddard Space Flight Center server address TRMM remote sensing data products (https://disc2.gesdisc.eosdis.nasa.gov/data/TRMM_RT/TRMM_3B42RT_Daily.7/).  function uses variable name ('precipitation') rainfall IMERG data products variable name ('precipitation') TRMM rainfall data products. Units gridded rainfall data 'mm'. IMERG dataset GPM Level 3 IMERG *Final* Daily 0.1 x 0.1 deg (GPM_3IMERGDF) derived half-hourly GPM_3IMERGHH. derived result represents final estimate daily accumulated precipitation. dataset produced NASA Goddard Earth Sciences (GES) Data Information Services Center (DISC) simply summing valid precipitation retrievals day GPM_3IMERGHH giving result (mm) https://gpm.nasa.gov/data/directory. TRMM dataset daily 0.25 x 0.25 deg accumulated precipitation product generated Near Real-Time 3-hourly TMPA (3B42RT). produced NASA GES DISC, value added product. Simple summation valid retrievals grid cell applied data day. result given (mm) https://gpm.nasa.gov/data/directory. Since IMERG data products available 2000-June-1 present, function uses TRMM data products time periods earlier 2000-June-1. Keep mind TRMM data products compatible IMERG data products available 2000-March-01. function outputs table gridded data files match grid points resolution IMERG data products (.e., resolution 0.1 deg). Since TRMM IMERG data products similar spatial resolution (.e., 0.25 0.1 deg respectively), function assigns nearest TRMM grid point missing IMERG data point approximate (.e. 2000-March-01 2014-March-11 time period). GPMswat function relies 'curl' tool transfer data NASA servers user machine, using HTTPS supported protocol.  'curl' command embedded function fetch precipitation IMERG/TRMM netcdf daily global files designed work seamlessly given appropriate logging information stored \".netrc\" file cookies file \".urs_cookies\" explained registering Earth Observing System Data Information System. imperative say user machine 'curl' installed prerequisite run GPMswat.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPMswat.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"SWAT rainfall data from NASA GPM — GPMswat","text":"start equal greater 2000-Mar-01.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPMswat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"SWAT rainfall data from NASA GPM — GPMswat","text":"Ibrahim Mohammed, ibrahim.mohammed@ku.ac.ae","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/GPMswat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SWAT rainfall data from NASA GPM — GPMswat","text":"","code":"#Lower Mekong basin example if (FALSE) GPMswat(Dir = \"./SWAT_INPUT/\", watershed = \"LowerMekong.shp\", DEM = \"LowerMekong_dem.tif\", start = \"2015-12-1\", end = \"2015-12-3\") # \\dontrun{}"},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP5.html","id":null,"dir":"Reference","previous_headings":"","what":"CMIP5 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP5","title":"CMIP5 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP5","text":"function downloads climate change data rainfall air temperature NASA Earth Exchange Global Daily Downscaled Projections NEX-GDDP GSFC servers, extracts data grids within specified watershed shapefile, generates tables format hydrological model requires rainfall air temperature data input. function also generates climate stations file input (file columns: ID, File NAME, LAT, LONG, ELEVATION) selected climatological grids fall within specified watershed. NASA Earth Exchange Global Daily Downscaled Projections NEX-GDDP dataset comprised downscaled climate scenarios globe derived General Circulation Model GCM runs conducted Coupled Model Intercomparison Project Phase 5 CMIP5 across two four greenhouse gas emissions scenarios known Representative Concentration Pathways RCPs (rcp45, rcp85).","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP5.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CMIP5 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP5","text":"","code":"NEX_GDDP_CMIP5(   Dir = \"./INPUT/\",   watershed = \"LowerMekong.shp\",   DEM = \"LowerMekong_dem.tif\",   start = \"2060-12-1\",   end = \"2060-12-3\",   model = \"IPSL-CM5A-MR\",   type = \"pr\",   slice = \"rcp85\" )"},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP5.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CMIP5 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP5","text":"Dir directory name store gridded climate data stations files. watershed study watershed shapefile spatially describing polygon(s) geographic projection crs ='+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'. DEM study watershed digital elevation model raster geographic projection crs ='+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'. start Beginning date gridded climate data. end Ending date gridded climate data. model climate modeling center name World Climate Research Programme WCRP global climate projections Coupled Model Intercomparison Project 5 CMIP5 (e.g., IPSL-CM5A-MR Institut Pierre-Simon Laplace CM5A-MR model). type flux data type. value can 'pr' precipitation 'tas' air temperature. slice scenario Representative Concentration Pathways. value can 'rcp45' , 'rcp85', 'historical'.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP5.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CMIP5 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP5","text":"table includes points ID, Point file name, Lat, Long, Elevation information, scalar climate change gridded data values point within study watershed ascii format stored Dir.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP5.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CMIP5 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP5","text":"user visit https://disc.gsfc.nasa.gov/information/documents Data Access document register Earth Observing System Data Information System (NASA Earthdata) authorize NASA GESDISC Data Access successfully work function. function accesses NASA Goddard Space Flight Center server IMERG remote sensing data products (https://gpm1.gesdisc.eosdis.nasa.gov/data/GPM_L3/GPM_3IMERGDF.07/), NASA Goddard Space Flight Center server NEX-GDDP climate change data products (https://www.nccs.nasa.gov/services/climate-data-services).  function uses variable name ('pr') rainfall NEX-GDDP data products variable name ('tas') NEX-GDDP minimum ('tasmin') maximum ('tasmax') air temperature data products. NEX-GDDP function outputs gridded rainfall data 'mm' gridded air temperature (maximum minimum) data degrees 'C'. NEX-GDDP dataset comprised downscaled climate scenarios globe derived General Circulation Model GCM runs conducted Coupled Model Intercomparison Project Phase 5 CMIP5 (Taylor et al. 2012) across two four greenhouse gas emissions scenarios known Representative Concentration Pathways RCPs (Meinshausen et al. 2011). CMIP5 GCM runs developed support Fifth Assessment Report Intergovernmental Panel Climate Change IPCC AR5. dataset includes downscaled projections 21 models scenarios daily scenarios produced distributed CMIP5. Bias-Correction Spatial Disaggregation BCSD method used generating NEX-GDDP dataset statistical downscaling algorithm specifically developed address current limitations global GCM outputs (Wood et al. 2002; Wood et al. 2004; Maurer et al. 2008; Thrasher et al. 2012).  NEX-GDDP climate projections downscaled spatial resolution 0.25 degrees x 0.25 degrees (approximately 25 km x 25 km). NEX_GDDP_CMIP5 downscales NEX-GDDP data grid points 0.1 degrees x 0.1 degrees following nearest point methods described Mohammed et al. (2018). NEX_GDDP_CMIP5 function relies 'curl' tool transfer data NASA servers user machine, using HTTPS supported protocol.  'curl' command embedded function fetch precipitation/air temperature NEX-GDDP/ netcdf annual global files designed work seamlessly appending appropriate logging information \".netrc\" file cookies file \".urs_cookies\". \".netrc\" \".urs_cookies\" files need stored local directory running function package. Instructions creating \".netrc\" \".urs_cookies\" files can accessed https://urs.earthdata.nasa.gov/documentation/for_users/data_access/curl_and_wget. imperative say user machine 'curl' installed prerequisite run NEX_GDDP_CMIP5 function part package (NASAaccess).","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP5.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"CMIP5 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP5","text":"start equal greater 2006-Jan-01 'rcp45' 'rcp85' RCP climate scenario. start equal greater 1950-Jan-01 end equal less 2005-Dec-31 'historical' GCM retrospective climate data.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP5.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"CMIP5 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP5","text":"Maurer, E. P. Hidalgo, H. G., 2008: Utility daily vs. monthly large-scale climate data: intercomparison two statistical downscaling methods. Hydrology Earth System Sciences, 12, 551-563, doi:10.5194/hess-12-551-2008. Meinshausen, M. S.J. Smith, K. Calvin, J.S. Daniel, M.L.T. Kainuma, et al., 2011: RCP greenhouse gas concentrations extensions 1765 2300. Climatic Change, 109, 213-241, doi:10.1007/s10584-011-0156-z. Mohammed, .N., J. Bolten, R. Srinivasan, V. Lakshmi, 2018: Improved Hydrological Decision Support System Lower Mekong River Basin Using Satellite-Based Earth Observations. Remote Sensing, 10, 885, doi:10.3390/rs10060885. Taylor, Karl E., Ronald J. Stouffer, Gerald . Meehl, 2012: Overview CMIP5 Experiment Design. Bull. Amer. Meteor. Soc., 93, 485–498, doi:10.1175/BAMS-D-11-00094.1. Thrasher, B., Maurer, E. P., McKellar, C., & Duffy, P. B., 2012: Technical Note: Bias correcting climate model simulated daily temperature extremes quantile mapping. Hydrology Earth System Sciences, 16(9), 3309-3314, doi:10.5194/hess-16-3309-2012 Wood, .W., E.P. Maurer, . Kumar, D.P. Lettenmaier, 2002: Long-range experimental hydrologic forecasting eastern United States. J. Geophysical Research-Atmospheres, 107, 4429, doi:10.1029/2001JD000659. Wood, .W., L.R. Leung, V. Sridhar, D.P. Lettenmaier, 2004: Hydrologic implications dynamical statistical approaches downscaling climate model outputs. Climatic Change, 15,189-216, doi: 10.1023/B:CLIM.0000013685.99609.9e","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP5.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CMIP5 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP5","text":"Ibrahim Mohammed, ibrahim.mohammed@ku.ac.ae","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP5.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CMIP5 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP5","text":"","code":"#Lower Mekong basin example if (FALSE) NEX_GDDP_CMIP5(Dir = \"./INPUT/\", watershed = \"LowerMekong.shp\", DEM = \"LowerMekong_dem.tif\", start = \"2060-12-1\", end = \"2060-12-3\", model = 'IPSL-CM5A-MR', type = 'pr', slice = 'rcp85') # \\dontrun{}"},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP6.html","id":null,"dir":"Reference","previous_headings":"","what":"CMIP6 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP6","title":"CMIP6 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP6","text":"function downloads climate change data rainfall air temperature NASA Earth Exchange Global Daily Downscaled Projections NEX-GDDP-CMIP6 AMES servers, extracts data grids within specified watershed shapefile, generates tables format hydrological model requires rainfall air temperature data input. function also generates climate stations file input (file columns: ID, File NAME, LAT, LONG, ELEVATION) selected climatological grids fall within specified watershed. NASA Earth Exchange Global Daily Downscaled Projections NEX-GDDP-CMIP6 data set comprised downscaled climate scenarios globe derived General Circulation Model GCM runs conducted Coupled Model Intercomparison Project Phase 6 CMIP6 across two four \"Tier 1\" greenhouse gas emissions scenarios known Shared Socioeconomic Pathways SSPs.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP6.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"CMIP6 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP6","text":"","code":"NEX_GDDP_CMIP6(   Dir = \"./INPUT/\",   watershed = \"LowerMekong.shp\",   DEM = \"LowerMekong_dem.tif\",   start = \"2060-12-1\",   end = \"2060-12-3\",   model = \"MIROC6\",   type = \"pr\",   slice = \"ssp245\" )"},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP6.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"CMIP6 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP6","text":"Dir directory name store gridded climate data stations files. watershed study watershed shapefile spatially describing polygon(s) geographic projection crs = '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'. DEM study watershed digital elevation model raster geographic projection crs = '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'. start Beginning date gridded climate data. end Ending date gridded climate data. model climate modeling center name World Climate Research Programme WCRP global climate projections Coupled Model Intercomparison Project 6 CMIP6 (e.g., MIROC6 sixth version Model Interdisciplinary Research Climate MIROC model). type flux data type. value can 'pr' precipitation 'tas' air temperature. slice scenario Shared Socioeconomic Pathways (SSPs). value can 'ssp126', 'ssp245', 'ssp370', 'ssp585', 'historical'.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP6.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"CMIP6 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP6","text":"table includes points ID, Point file name, Lat, Long, Elevation information formatted read hydrological models scalar climate change gridded data values point within study watershed ascii format needed hydrological model weather inputs stored Dir.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP6.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"CMIP6 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP6","text":"user visit https://disc.gsfc.nasa.gov/information/documents Data Access document register Earth Observing System Data Information System (NASA Earthdata) authorize NASA GESDISC Data Access successfully work function. function accesses NASA Goddard Space Flight Center server IMERG remote sensing data products (https://gpm1.gesdisc.eosdis.nasa.gov/data/GPM_L3/GPM_3IMERGDF.07/), NASA AMES Research Center server NEX-GDDP-CMIP6 climate change data products https://www.nccs.nasa.gov/services/data-collections/land-based-products/nex-gddp-cmip6.  function uses variable name ('pr') rainfall NEX-GDDP-CMIP6 data products variable name ('tas') NEX-GDDP-CMIP6 minimum ('tasmin') maximum ('tasmax') air temperature data products. NEX_GDDP_CMIP6 function outputs gridded rainfall data 'mm' gridded air temperature (maximum minimum) data degrees 'C'. NEX-GDDP-CMIP6 dataset comprised downscaled climate scenarios globe derived General Circulation Model GCM runs conducted Coupled Model Intercomparison Project Phase 6 CMIP6 (Eyring et al. 2016) across four \"Tier 1\" greenhouse gas emissions scenarios known Shared Socioeconomic Pathways SSPs (O'Neil et al. 2016; Meinshausen et al. 2020). CMIP6 GCM runs developed support Sixth Assessment Report Intergovernmental Panel Climate Change IPCC AR6. data set includes downscaled projections 35 models scenarios daily scenarios produced distributed CMIP6. Please visit NCCS Dataportal - Datashare technical note https://www.nccs.nasa.gov/sites/default/files/NEX-GDDP-CMIP6-Tech_Note.pdf ensure requested model greenhouse gas emissions scenario (SSPs) available server execute run. Bias-Correction Spatial Disaggregation BCSD method used generating NEX-GDDP-CMIP6 data set statistical downscaling algorithm specifically developed address current limitations global GCM outputs (Wood et al. 2002; Wood et al. 2004; Maurer et al. 2008; Thrasher et al. 2012).  NEX-GDDP-CMIP6 climate projections downscaled spatial resolution 0.25 degrees x 0.25 degrees (approximately 25 km x 25 km). NEX_GDDP_CMIP6 downscales NEX-GDDP-CMIP6 data grid points 0.1 degrees x 0.1 degrees following nearest point methods described Mohammed et al. (2018). NEX_GDDP_CMIP6 function relies 'curl' tool transfer data NASA servers user machine, using HTTPS supported protocol.  'curl' command embedded function fetch precipitation/air temperature NEX-GDDP-CMIP6/ netcdf annual global files designed work seamlessly appending appropriate logging information \".netrc\" file cookies file \".urs_cookies\". \".netrc\" \".urs_cookies\" files need stored local directory running function package. Instructions creating \".netrc\" \".urs_cookies\" files can accessed https://urs.earthdata.nasa.gov/documentation/for_users/data_access/curl_and_wget. imperative say user machine 'curl' installed prerequisite run NEX_GDDP_CMIP6 function part package (NASAaccess).","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP6.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"CMIP6 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP6","text":"start equal greater 2015-Jan-01 'ssp126', 'ssp245', 'ssp370', 'ssp585' SSPs climate scenario. start equal greater 1950-Jan-01 end equal less 2014-Dec-31 'historical' GCM retrospective climate data.","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP6.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"CMIP6 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP6","text":"Eyring, V., Bony, S., Meehl, G.., Senior, C.., Stevens, B., et al., 2016. Overview Coupled Model Intercomparison Project Phase 6 (CMIP6) experimental design organization. Geoscientific Model Development, 9, 1937-1958, doi: 10.5194/gmd-9-1937-2016 Maurer, E. P. Hidalgo, H. G., 2008. Utility daily vs. monthly large-scale climate data: intercomparison two statistical downscaling methods. Hydrology Earth System Sciences, 12, 551-563, doi: 10.5194/hess-12-551-2008. Meinshausen, M., Nicholls, Z.R.J., Lewis, J., Gidden, M.J., Vogel, E., et al., 2020. shared socio-economic pathway (SSP) greenhouse gas concentrations extensions 2500. Geoscientific Model Development, 13, 3571-3605, doi: 10.5194/gmd-13-3571-2020 Meinshausen, M., Smith, S.J., Calvin, K., Daniel, J.S., Kainuma, M.L.T., et al., 2011. RCP greenhouse gas concentrations extensions 1765 2300. Climatic Change, 109, 213-241, doi: 10.1007/s10584-011-0156-z. Mohammed, .N., Bolten, J., Srinivasan, R., V. Lakshmi, 2018. Improved Hydrological Decision Support System Lower Mekong River Basin Using Satellite-Based Earth Observations. Remote Sensing, 10, 885, doi: 10.3390/rs10060885. O'Neill, B.C., Tebaldi, C., van Vuuren, D.P., Eyring, V., Friedlingstein, et al., 2016. Scenario Model Intercomparison Project (ScenarioMIP) CMIP6. Geoscientific Model Development, 9, 3461-3482, doi: 10.5194/gmd-9-3461-2016 Thrasher, B., Maurer, E. P., McKellar, C., P. B. Duffy, 2012. Technical Note: Bias correcting climate model simulated daily temperature extremes quantile mapping. Hydrology Earth System Sciences, 16(9), 3309-3314, doi:1 0.5194/hess-16-3309-2012 Wood, .W., E.P. Maurer, . Kumar, D.P. Lettenmaier, 2002: Long-range experimental hydrologic forecasting eastern United States. J. Geophysical Research-Atmospheres, 107, 4429, doi: 10.1029/2001JD000659. Wood, .W., L.R. Leung, V. Sridhar, D.P. Lettenmaier, 2004: Hydrologic implications dynamical statistical approaches downscaling climate model outputs. Climatic Change, 15,189-216, doi: 10.1023/B:CLIM.0000013685.99609.9e","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP6.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"CMIP6 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP6","text":"Ibrahim Mohammed, ibrahim.mohammed@ku.ac.ae","code":""},{"path":"https://github.com/imohamme/NASAaccess/reference/NEX_GDDP_CMIP6.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"CMIP6 climate data from NASA NEX-GDDP — NEX_GDDP_CMIP6","text":"","code":"#Lower Mekong basin example if (FALSE) NEX_GDDP_CMIP6(Dir = \"./INPUT/\", watershed = \"LowerMekong.shp\", DEM = \"LowerMekong_dem.tif\", start = \"2060-12-1\", end = \"2060-12-3\", model = 'MIROC6', type = 'pr', slice = 'ssp245') # \\dontrun{}"},{"path":"https://github.com/imohamme/NASAaccess/news/index.html","id":"nasaaccess-410","dir":"Changelog","previous_headings":"","what":"NASAaccess 4.1.0","title":"NASAaccess 4.1.0","text":"Updating contacts. Migration GPM Version 07 Data.","code":""},{"path":"https://github.com/imohamme/NASAaccess/news/index.html","id":"nasaaccess-400","dir":"Changelog","previous_headings":"","what":"NASAaccess 4.0.0","title":"NASAaccess 4.0.0","text":"Removing raster, rgeos, regal, maptools transition terra! Fixing CMIP6 server access","code":""},{"path":"https://github.com/imohamme/NASAaccess/news/index.html","id":"nasaaccess-343","dir":"Changelog","previous_headings":"","what":"NASAaccess 3.4.3","title":"NASAaccess 3.4.3","text":"Adding DOI (10.5281/zenodo.8422392).","code":""},{"path":"https://github.com/imohamme/NASAaccess/news/index.html","id":"nasaaccess-343-1","dir":"Changelog","previous_headings":"","what":"NASAaccess 3.4.3","title":"NASAaccess 3.4.3","text":"Description edits.","code":""},{"path":"https://github.com/imohamme/NASAaccess/news/index.html","id":"nasaaccess-342","dir":"Changelog","previous_headings":"","what":"NASAaccess 3.4.2","title":"NASAaccess 3.4.2","text":"Adding getPass library Imports. Addressing curl Certificate Verification NEX-GDDP.","code":""},{"path":"https://github.com/imohamme/NASAaccess/news/index.html","id":"nasaaccess-341","dir":"Changelog","previous_headings":"","what":"NASAaccess 3.4.1","title":"NASAaccess 3.4.1","text":"need _netrc file creation windows","code":""},{"path":"https://github.com/imohamme/NASAaccess/news/index.html","id":"nasaaccess-340","dir":"Changelog","previous_headings":"","what":"NASAaccess 3.4.0","title":"NASAaccess 3.4.0","text":"Adding automated script .netrc file creation","code":""},{"path":"https://github.com/imohamme/NASAaccess/news/index.html","id":"nasaaccess-331","dir":"Changelog","previous_headings":"","what":"NASAaccess 3.3.1","title":"NASAaccess 3.3.1","text":"Adding NASAaccess Tethys webpage. Fixing CMIP6 server access.","code":""},{"path":"https://github.com/imohamme/NASAaccess/news/index.html","id":"nasaaccess-330","dir":"Changelog","previous_headings":"","what":"NASAaccess 3.3.0","title":"NASAaccess 3.3.0","text":"Fixing CMIP6 server access.","code":""},{"path":"https://github.com/imohamme/NASAaccess/news/index.html","id":"nasaaccess-320","dir":"Changelog","previous_headings":"","what":"NASAaccess 3.2.0","title":"NASAaccess 3.2.0","text":"Adding Near Real Time GPM function latency one day. Fixing CMIP5 CMIP6 server access.","code":""},{"path":"https://github.com/imohamme/NASAaccess/news/index.html","id":"nasaaccess-310","dir":"Changelog","previous_headings":"","what":"NASAaccess 3.1.0","title":"NASAaccess 3.1.0","text":"fixing CMIP5 CMIP6 server access.","code":""},{"path":"https://github.com/imohamme/NASAaccess/news/index.html","id":"nasaaccess-303","dir":"Changelog","previous_headings":"","what":"NASAaccess 3.0.3","title":"NASAaccess 3.0.3","text":"Released March-2022. Submission CRAN.","code":""},{"path":"https://github.com/imohamme/NASAaccess/news/index.html","id":"nasaaccess-300","dir":"Changelog","previous_headings":"","what":"NASAaccess 3.0.0","title":"NASAaccess 3.0.0","text":"Released 2022-February-28. Adding CMIP6 access function.","code":""},{"path":"https://github.com/imohamme/NASAaccess/news/index.html","id":"nasaaccess-251","dir":"Changelog","previous_headings":"","what":"NASAaccess 2.5.1","title":"NASAaccess 2.5.1","text":"Released 2021-September-1. Adding vignettes.","code":""},{"path":"https://github.com/imohamme/NASAaccess/news/index.html","id":"nasaaccess-25","dir":"Changelog","previous_headings":"","what":"NASAaccess 2.5","title":"NASAaccess 2.5","text":"Released 2021-July-12. Handling GLDAS dimension order change 2021 data products.","code":""}]
